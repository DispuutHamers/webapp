name: Tests

on:
  push:
    branches:
      - master
      - staging
  pull_request:
    branches:
      - '*'

env:
  RAILS_ENV: test

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ['3.0.2']
    steps:
      - uses: actions/checkout@v2

      - name: Set up ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true

      - name: Set up database
        run: |
          sudo systemctl start mysql
          cp config/database-ci.yml config/database.yml
          bundle exec rails db:setup

      - name: Get yarn cache directory
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Use yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: yarn install
        run: yarn install --prefer-offline --frozen-lockfile --check-files

      - name: Procompile assets
        run: bundle exec rails assets:precompile

      - name: Run tests
        run: bundle exec rails test:all

  rubocop:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ['3.0.2']

    steps:
      - uses: actions/checkout@v2

      - name: Set up ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true

      - name: Run RuboCop
        continue-on-error: true
        run: bundle exec rubocop --parallel

  brakeman:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ['3.0.2']
    steps:
      - uses: actions/checkout@v2

      - name: Set up ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true

      - name: Run brakeman
        continue-on-error: true
        run: bundle exec brakeman
